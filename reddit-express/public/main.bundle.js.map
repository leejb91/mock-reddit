{"version":3,"sources":["/Users/jerrylee/code/mock-reddit/src/$_gendir lazy","/Users/jerrylee/code/mock-reddit/src/app/app.component.css","/Users/jerrylee/code/mock-reddit/src/app/app.component.html","/Users/jerrylee/code/mock-reddit/src/app/app.component.ts","/Users/jerrylee/code/mock-reddit/src/app/app.module.ts","/Users/jerrylee/code/mock-reddit/src/app/app.routing.ts","/Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.css","/Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.html","/Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.ts","/Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.css","/Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.html","/Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.ts","/Users/jerrylee/code/mock-reddit/src/app/list/list.component.css","/Users/jerrylee/code/mock-reddit/src/app/list/list.component.html","/Users/jerrylee/code/mock-reddit/src/app/list/list.component.ts","/Users/jerrylee/code/mock-reddit/src/app/reddit-service/reddit.service.ts","/Users/jerrylee/code/mock-reddit/src/environments/environment.ts","/Users/jerrylee/code/mock-reddit/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\t<router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { ListComponent } from './list/list.component';\nimport { RedditService } from './reddit-service/reddit.service';\nimport { RepliesComponent } from './comments/replies/replies.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tCommentsComponent,\n\t\tListComponent,\n\t\tRepliesComponent,\n\t],\n\timports: [\n\t\tAppRoutingModule,\n\t\tBrowserModule,\n\t\tHttpClientModule,\n\t\tRouterModule,\n\t],\n\tproviders: [\n\t\tRedditService\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { CommentsComponent } from './comments/comments.component';\n\nconst routes: Routes = [\n\t{ path: '', component: ListComponent },\n\t{ path: ':id', component: CommentsComponent }\n];\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/app.routing.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.css\n// module id = ../../../../../src/app/comments/comments.component.css\n// module chunks = main","module.exports = \"<div *ngFor=\\\"let comment of comments; let first = first\\\" style=\\\"margin: 10px;\\\">\\n\\t<div *ngIf=\\\"!first\\\">\\n\\t\\t<div *ngFor=\\\"let commentChildren of comment.data.children\\\" style=\\\"padding: 10px;\\\">\\n\\t\\t\\t<div *ngIf=\\\"commentChildren.kind !== 'more'\\\">\\n\\t\\t\\t\\t{{commentChildren.data.body}} - {{commentChildren.data.author}}\\n\\t\\t\\t\\t<app-replies [replies]=\\\"commentChildren.data.replies\\\"></app-replies>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"commentChildren.kind === 'more'\\\">\\n\\t\\t\\t\\tmore\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.html\n// module id = ../../../../../src/app/comments/comments.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RedditService } from '../reddit-service/reddit.service';\n\n@Component({\n\tselector: 'app-comments',\n\ttemplateUrl: './comments.component.html',\n\tstyleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\tid: string;\n\tcomments: any[];\n\n\tconstructor(\n\t\tprivate redditService: RedditService,\n\t\tprivate route: ActivatedRoute\n\t) { }\n\n\tngOnInit() {\n\t\tthis.id = this.route.snapshot.params['id'];\n\t\tthis.getComments();\n\t}\n\n\tgetComments() {\n\t\tthis.redditService.getComments(this.id).subscribe(\n\t\t\t(res: any) => {\n\t\t\t\tthis.comments = res;\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/comments/comments.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.css\n// module id = ../../../../../src/app/comments/replies/replies.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"replies\\\">\\n\\t<div style=\\\"padding: 10px;\\\" *ngFor=\\\"let reply of replies.data.children\\\">\\n\\t\\t<div *ngIf=\\\"reply.kind === 'more'\\\">more</div>\\n\\t\\t<div *ngIf=\\\"reply.kind !== 'more'\\\">\\n\\t\\t\\t{{reply.data.body}} - {{reply.data.author}}\\n\\t\\t\\t<app-replies [replies]=\\\"reply.data.replies\\\"></app-replies>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.html\n// module id = ../../../../../src/app/comments/replies/replies.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-replies',\n\ttemplateUrl: './replies.component.html',\n\tstyleUrls: ['./replies.component.css']\n})\nexport class RepliesComponent implements OnInit {\n\t@Input() replies: any;\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/comments/replies/replies.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pointer {\\n\\tcursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/list/list.component.css\n// module id = ../../../../../src/app/list/list.component.css\n// module chunks = main","module.exports = \"<h2>Instant Regret</h2>\\n\\n<div class=\\\"pointer\\\" *ngFor=\\\"let post of list\\\" (click)=\\\"goToComments(post.data.id)\\\" style=\\\"margin: 10px;\\\">\\n\\t<a>\\n\\t\\t<img style=\\\"width: 70px\\\" *ngIf=\\\"post.data.thumbnail !== 'self'\\\" src={{post.data.thumbnail}} alt=\\\"\\\">\\n\\t</a>\\n\\t{{post.data.title}}\\n</div>\\n\\n<div style=\\\"padding: 10px;\\\">\\n\\t<button *ngIf=\\\"showPreviousButton\\\" class=\\\"btn btn-default\\\" (click)=\\\"navigate('before')\\\">Previous</button>\\n\\t<button class=\\\"btn btn-default\\\" (click)=\\\"navigate('after')\\\">Next</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jerrylee/code/mock-reddit/src/app/list/list.component.html\n// module id = ../../../../../src/app/list/list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RedditService } from '../reddit-service/reddit.service';\n\n@Component({\n\tselector: 'app-list',\n\ttemplateUrl: './list.component.html',\n\tstyleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\tlist: any;\n\tshowPreviousButton = false;\n\tpage = 1;\n\n\tqueryParams: any = {\n\t\tbefore: '',\n\t\tafter: '',\n\t\tcount: 0,\n\t\tlimit: 10\n\t};\n\n\tconstructor(\n\t\tprivate redditService: RedditService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router\n\t) { }\n\n\tngOnInit() {\n\t\tthis.route.queryParams.subscribe(\n\t\t\tquery => {\n\t\t\t\tthis.queryParams.before = query.before ? query.before : '';\n\t\t\t\tthis.queryParams.after = query.after ? query.after : '';\n\t\t\t\tthis.queryParams.count = query.count ? parseInt(query.count, 10) : 0;\n\t\t\t\tthis.getList();\n\t\t\t\tthis.checkPage();\n\t\t\t}\n\t\t);\n\t}\n\n\tgetList() {\n\t\tthis.redditService.getList(this.queryParams).subscribe(\n\t\t\t(res: any) => {\n\t\t\t\tconst response = res;\n\t\t\t\tthis.list = response.data.children;\n\t\t\t}, err => {\n\t\t\t\tconsole.log('error', err);\n\t\t\t}\n\t\t);\n\t}\n\n\tcheckPage() {\n\t\tif (this.queryParams.count % 10 === 0 && !!this.queryParams.after) {\n\t\t\tthis.page = (this.queryParams.count / 10) + 1;\n\t\t}\n\t\tif (this.queryParams.count % 10 === 1 && !!this.queryParams.before) {\n\t\t\tthis.page = (this.queryParams.count - 1) / 10;\n\t\t}\n\t\tif (this.page <= 1) {\n\t\t\tthis.showPreviousButton = false;\n\t\t} else {\n\t\t\tthis.showPreviousButton = true;\n\t\t}\n\t}\n\n\tgoToComments(id: string) {\n\t\tthis.router.navigate(['/', id]);\n\t}\n\n\tnavigate(type: string) {\n\t\t// get first or last fullname of item listing depending on 'previous' or 'next'\n\t\tif (type === 'after') {\n\t\t\tthis.page++;\n\t\t\tthis.queryParams[type] = this.list[this.list.length - 1].data.name;\n\t\t\tthis.queryParams.before = '';\n\t\t\tthis.queryParams.count = (this.page - 1) * this.queryParams.limit;\n\t\t} else {\n\t\t\tthis.page--;\n\t\t\tthis.queryParams[type] = this.list[0].data.name;\n\t\t\tthis.queryParams.after = '';\n\t\t\tthis.queryParams.count = (this.page * this.queryParams.limit) + 1;\n\t\t}\n\n\t\tconst options = {queryParams: this.queryParams};\n\t\tthis.router.navigate([''], options);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/list/list.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class RedditService {\n\turl = 'api';\n\n\tconstructor(\n\t\tprivate http: HttpClient\n\t) { }\n\n\tgetList(query: any) {\n\t\tlet params = new HttpParams();\n\t\tconst queryKeys = Object.keys(query);\n\t\tqueryKeys.forEach((key) => {\n\t\t\tparams = params.append(key, query[key]);\n\t\t});\n\t\treturn this.http.get(this.url, {params: params});\n\t}\n\n\tgetComments(id: string) {\n\t\treturn this.http.get(this.url + '/' + id);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/app/reddit-service/reddit.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/jerrylee/code/mock-reddit/src/main.ts"],"sourceRoot":"webpack:///"}